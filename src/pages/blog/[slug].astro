---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post: { slug: string }) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props as Props;
const { Content } = await post.render();

// Get all posts to determine prev/next
const allPosts = (await getCollection('blog')).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const currentIndex = allPosts.findIndex((p) => p.slug === post.slug);
const prevPost = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
const nextPost = currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : null;
---

<Layout title={post.data.title}>
  <!-- NAVIGATION HEADER -->
  <nav class="post-nav-container">
    <div class="post-nav">
      <div class="flex gap-4">
        <a href="/" class="post-nav-bubble"><i class="fa-solid fa-house"></i></a>
        <a href="/blog/" class="post-nav-bubble"><i class="fa-solid fa-list-ul"></i></a>
      </div>
      <div class="flex gap-4">
        {prevPost && (
          <a href={`/blog/${prevPost.slug}/`} class="post-nav-bubble"><i class="fa-solid fa-backward"></i></a>
        )}
        {nextPost && (
          <a href={`/blog/${nextPost.slug}/`} class="post-nav-bubble"><i class="fa-solid fa-forward"></i></a>
        )}
      </div>
    </div>
  </nav>
  <main class="blog-post-wrapper">
    <h1 class="blog-post-header">{post.data.title}</h1>

    {post.data.image && (
      <img src={post.data.image} alt={post.data.alt || post.data.title} class="post-header-image" />
    )}

    <article class="blog-post-content">
      <Content />
    </article>
  </main>
</Layout>
